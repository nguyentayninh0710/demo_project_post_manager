package com.myclass.service.impl;

import java.util.ArrayList;
import java.util.List;

import org.mindrot.jbcrypt.BCrypt;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.myclass.common.ServiceInfo;
import com.myclass.dto.UserDto;
import com.myclass.entity.Role;
import com.myclass.entity.User;
import com.myclass.repository.UserRepository;
import com.myclass.service.UserService;
@Service
public class UserServiceImpl implements UserService {
	@Autowired
	private UserRepository userRepository;
	public List<UserDto> getAll() {
		List<UserDto> dtos = new ArrayList<UserDto>();
		List<User> users = userRepository.findAll();
		for (User user : users) {
			dtos.add(new UserDto(user.getId(), 
					user.getEmail(), 
					user.getPassword(), 
					user.getFullname(), 
					user.getAvatar(),
					user.getRole_id() ));
		}
		return dtos;
	}
	@Override
	public ServiceInfo save(UserDto dto) {
		// Kiểm tồn tại của name
				int count = userRepository.countByName(dto.getFullname());

				// Nếu có rồ i thì tb để nhập lại
				if (count > 0) {
					return new ServiceInfo(false, "Tên đã sử dụng!");
				}
				try {
					// nếu chưa thì thêm mới
					User user = new User();
					user.setPassword(BCrypt.hashpw(dto.getPassword(), BCrypt.gensalt(12)));
					user.setEmail(dto.getEmail());
					user.setFullname(dto.getFullname());
					user.setAvatar(dto.getAvatar());
					user.setRole_id(dto.getRole_id());
					return new ServiceInfo(true, "Thêm mới thành công!");
				} catch (Exception e) {
					e.printStackTrace();
				}
				return new ServiceInfo(false, "Thêm mới thất bại!");
	}
	
	

}
